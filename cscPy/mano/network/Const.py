import numpy as np
import torch
# joint mapping indices from mano to bighand
mano2bighand_skeidx = [0, 13, 1, 4, 10, 7, 14, 15, 16, 2, 3, 17, 5, 6, 18, 11, 12, 19, 8, 9, 20]
STB2Bighand_skeidx = [0, 17, 13, 9, 5, 1, 18, 19, 20, 14, 15, 16, 10, 11, 12, 6, 7, 8, 2, 3, 4]
Bighand2mano_skeidx = [0, 2, 9, 10, 3, 12, 13, 5, 18, 19, 4, 15, 16, 1, 6, 7, 8, 11, 14, 17, 20]
RHD2Bighand_skeidx = [0,4,8,12,16,20,3,2,1,7,6,5,11,10,9,15,14,13,19,18,17]
SynthHands2Bighand_skeidx=[0,1,5,9,13,17,2,6,10,14,18,3,7,11,15,19,4,8,12,16,20]
MV2mano_skeidx=[0,1,2,3, 5,6,7, 13,14,15, 9,10,11, 17,18,19, 20,4,8,12,16]


boneSpace=[np.array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]]), np.array([[ 0.0663915 , -0.01058266,  0.99772805, -0.01484512],
       [-0.99031484,  0.12150131,  0.06718595, -0.08800197],
       [-0.12193744, -0.9925351 , -0.00241524, -0.01585393],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[ 0.00644435, -0.19614087,  0.9805447 , -0.02191275],
       [-0.998274  , -0.05850273, -0.00514152, -0.12051961],
       [ 0.05837359, -0.9788291 , -0.19617917,  0.01037745],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-0.04437879, -0.18489099,  0.98174673, -0.0291764 ],
       [-0.99793845, -0.03740151, -0.05215352, -0.14154199],
       [ 0.04636198, -0.9820472 , -0.18284994,  0.00834884],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-0.17285185,  0.05925312,  0.98315454, -0.01297362],
       [-0.9825901 ,  0.05865188, -0.1762842 , -0.09351755],
       [-0.06810991, -0.99651843,  0.04808272, -0.00775969],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-0.16515312, -0.07651811,  0.98328555, -0.0119517 ],
       [-0.98406637, -0.05379489, -0.16946739, -0.12533449],
       [ 0.0658637 , -0.995616  , -0.06641412,  0.00807464],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-0.20104605,  0.01708366,  0.9794235 , -0.01725909],
       [-0.97921354,  0.02391667, -0.20141645, -0.14823261],
       [-0.02686573, -0.9995678 ,  0.01191984, -0.00471186],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-0.5503182 ,  0.36498863,  0.7509453 , -0.00177876],
       [-0.8059175 ,  0.00292979, -0.59201485, -0.08098807],
       [-0.21828102, -0.9310075 ,  0.2925375 , -0.01162906],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-0.53289753,  0.27590913,  0.7999241 ,  0.0015645 ],
       [-0.8374439 , -0.03647742, -0.545299  , -0.10259177],
       [-0.12127506, -0.9604916 ,  0.2504969 , -0.00593908],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-4.9094260e-01,  2.0770971e-01,  8.4605855e-01,  8.1558563e-03],
       [-8.6999744e-01, -6.6055886e-02, -4.8860621e-01, -1.2141690e-01],
       [-4.5601606e-02, -9.7595787e-01,  2.1313675e-01, -8.7622460e-04],
       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],
      dtype=np.float32), np.array([[-0.13691016,  0.38049966,  0.9145779 ,  0.01471008],
       [-0.98164153,  0.07166289, -0.1767596 , -0.08466616],
       [-0.13279992, -0.9220005 ,  0.3637028 , -0.00480211],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-0.31456795,  0.2763913 ,  0.90809286, -0.00524398],
       [-0.9489495 , -0.0681066 , -0.30798352, -0.11434565],
       [-0.02327724, -0.9586292 ,  0.2837067 ,  0.00463999],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[-2.7801961e-01,  3.3359855e-01,  9.0077466e-01, -4.4586137e-04],
       [-9.5694286e-01, -1.4709894e-02, -2.8990027e-01, -1.3929550e-01],
       [-8.3461091e-02, -9.4260067e-01,  3.2332492e-01, -1.7802520e-03],
       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],
      dtype=np.float32), np.array([[ 0.7189444 , -0.3363815 ,  0.6082399 , -0.00360266],
       [-0.63768524,  0.02895674,  0.7697455 , -0.0347815 ],
       [-0.27654392, -0.94127965, -0.19369593, -0.01627288],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[ 0.55783904, -0.48946595,  0.6702411 , -0.01595628],
       [-0.82002157, -0.20051682,  0.5360501 , -0.06532866],
       [-0.12798543, -0.8486547 , -0.5132335 ,  0.00739881],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32), np.array([[ 0.5821666 , -0.44892254,  0.6778901 , -0.01402845],
       [-0.7925573 , -0.12722784,  0.59637046, -0.09300397],
       [-0.18148005, -0.88446605, -0.42987058, -0.00218545],
       [ 0.        ,  0.        ,  0.        ,  1.        ]],
      dtype=np.float32)]




boneSpaceTensor=torch.tensor(boneSpace,dtype=torch.float32)


